Title: “Our Voice, Our Rights” — MGNREGA District Dashboard (Development Version)

🎯 Objective

Build a development-ready MERN stack application that displays district-wise MGNREGA performance data using the Government of India’s Open API from https://data.gov.in/catalog/mahatma-gandhi-national-rural-employment-guarantee-act-mgnrega
.

Focus:

Clean, professional UI similar to official Indian government portals.

Bilingual support (English + Hindi + marathi) with an easy toggle.

Auto-detect user district using location.

Store API responses in MongoDB for caching.

⚙️ Tech Stack

Frontend: React + Vite + Tailwind CSS

Backend: Node.js + Express.js

Database: MongoDB (via Mongoose)

🧠 Core Features
1. District Performance Dashboard

Dropdown for State → District selection.

Display:

👷 Total people employed

💰 Total wages paid

📅 Number of person-days generated

🧱 Progress of work completed

📊 Total expenditure

Use cards, charts, and color coding for clarity.

Include bar/line charts using Chart.js or Recharts.

2. Auto-District Detection (Bonus)

Use HTML5 Geolocation API to get user coordinates.

Use OpenStreetMap Nominatim API for reverse geocoding.

Automatically show the district’s MGNREGA data.

3. Data Caching

On API request:

Check MongoDB → if data is available and <24 hrs old → serve it.

Else fetch fresh data from the MGNREGA API and update MongoDB.

🗃️ Project Structure
/backend
├── index.js
├── routes/
│   └── mgnregaRoutes.js
├── controllers/
│   └── mgnregaController.js
├── models/
│   └── Performance.js
└── .env  (MONGO_URI, PORT, API_KEY)

/frontend
├── vite.config.js
├── src/
│   ├── App.jsx
│   ├── components/
│   │   ├── Navbar.jsx
│   │   ├── DistrictSelector.jsx
│   │   ├── DataCards.jsx
│   │   ├── ChartView.jsx
│   │   ├── LanguageToggle.jsx
│   │   └── Loader.jsx
│   ├── pages/
│   │   └── Dashboard.jsx
│   └── i18n/
│       ├── en.json
│       └── hi.json
└── tailwind.config.js

🧩 Backend Requirements

Connect to MongoDB using Mongoose.

Endpoints:

GET /api/states → list all states

GET /api/districts/:state → list of districts

GET /api/performance/:district → cached or fresh data

Environment variables:

MONGO_URI=your_mongodb_uri
API_KEY=your_data_gov_in_key
PORT=5000


Use nodemon for live reload during development.

💾 MongoDB Schema
import mongoose from "mongoose";

const PerformanceSchema = new mongoose.Schema({
  state: String,
  district: String,
  month: String,
  year: String,
  data: Object,
  lastUpdated: { type: Date, default: Date.now }
});

export default mongoose.model("Performance", PerformanceSchema);

🎨 Frontend Requirements

Professional government-style theme:

Use Indian tricolor (navy blue, saffron, green, white).

Use Tailwind components with soft shadows and rounded cards.

Include the title banner “Our Voice, Our Rights” at the top.

Bilingual interface:

Use i18next for translation (English + Hindi).

Add a simple toggle button 🌐 to switch language.

Mobile-first layout for rural accessibility.

Include:

Navbar with logo + language toggle.

District selection dropdowns.

Data cards and charts.

Clear tooltips for each metric.

Loading and error states with meaningful messages.

🧑‍💻 Development Setup

Use npm install to add dependencies.

Run both frontend and backend together using concurrently:

npm run dev


Frontend runs on port 5173, backend on port 5000.

No hosting, Docker, or production setup required yet.

✅ Expected Output

A working development-ready MERN application that allows users to:

See district-level MGNREGA stats visually.

Auto-detect their district using location.

Switch between English and Hindi.

Experience a clean, professional, accessible design.